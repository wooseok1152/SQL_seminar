-- TABLE FULL SCAN Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ FULL(A) */
       A.*
FROM SYSTEM.STUDENT A
WHERE SNO <= '930000';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- INDEX SCAN Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ INDEX(A STUDENT_SNO_PK) */
       A.*
FROM SYSTEM.STUDENT A
WHERE SNO <= '930000';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- USE_NL Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_NL(B) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- FULL Hint & USE_NL Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_NL(B) FULL(A) FULL(B) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- 네 개 테이블 Join 예시(NL JOIN 두 번 & SORT MERGE JOIN 한 번)
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A C B D) USE_NL(C) USE_NL(B) USE_MERGE(D) INDEX(A STUDENT_SNO_PK) INDEX(B COURSE_CNO_PK) */
       A.SNAME,
       B.CNAME,
       C.RESULT,
       D.GRADE
FROM SYSTEM.STUDENT A,
     SYSTEM.COURSE B,
     SYSTEM.SCORE C,
     SYSTEM.SCGRADE D
WHERE A.SNO = C.SNO
      AND B.CNO = C.CNO
      AND C.RESULT <= D.HISCORE
      AND C.RESULT >= D.LOSCORE
      AND A.SNO <= '930000';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- USE_HASH Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_HASH(B) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- INDEX Hint & USE_HASH Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_HASH(B) INDEX(A STUDENT_SNO_PK) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO
      AND A.SNO <= '930000';
      
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- INLINE VIEW에 대한 NO_MERGE Hint 예시
EXPLAIN PLAN FOR 
SELECT SNAME,
       SUM(A_CNT) AS A_CNT,
       SUM(B_CNT) AS B_CNT,
       SUM(C_CNT) AS C_CNT,
       SUM(D_CNT) AS D_CNT,
       SUM(F_CNT) AS F_CNT
FROM (
    SELECT /*+ NO_MERGE */
           SNAME,
           CASE WHEN GRADE = 'A' THEN CNT ELSE 0 END AS A_CNT,
           CASE WHEN GRADE = 'B' THEN CNT ELSE 0 END AS B_CNT,
           CASE WHEN GRADE = 'C' THEN CNT ELSE 0 END AS C_CNT,
           CASE WHEN GRADE = 'D' THEN CNT ELSE 0 END AS D_CNT,
           CASE WHEN GRADE = 'F' THEN CNT ELSE 0 END AS F_CNT
    FROM (
        SELECT /*+ NO_MERGE */
               A.SNAME,
               D.GRADE,
               COUNT(*) AS CNT
        FROM SYSTEM.STUDENT A,
             SYSTEM.COURSE B,
             SYSTEM.SCORE C,
             SYSTEM.SCGRADE D
        WHERE A.SNO = C.SNO
              AND B.CNO = C.CNO
              AND C.RESULT <= D.HISCORE
              AND C.RESULT >= D.LOSCORE
              AND A.SNO IN ('944503', '925602')
        GROUP BY A.SNAME, D.GRADE
    )
)
GROUP BY SNAME;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   

-- INLINE Hint 예시
EXPLAIN PLAN FOR 
WITH COUNT_BY_STDNT_N_GRADE AS (
    SELECT /*+ INLINE */
           A.SNAME,
           D.GRADE,
           COUNT(*) AS CNT
    FROM SYSTEM.STUDENT A,
         SYSTEM.COURSE B,
         SYSTEM.SCORE C,
         SYSTEM.SCGRADE D
    WHERE A.SNO = C.SNO
          AND B.CNO = C.CNO
          AND C.RESULT <= D.HISCORE
          AND C.RESULT >= D.LOSCORE
          AND A.SNO IN ('944503', '925602')
    GROUP BY A.SNAME, D.GRADE
),

TMP_PIVOT_TABLE AS (
    SELECT /*+ INLINE */
           SNAME,
           CASE WHEN GRADE = 'A' THEN CNT ELSE 0 END AS A_CNT,
           CASE WHEN GRADE = 'B' THEN CNT ELSE 0 END AS B_CNT,
           CASE WHEN GRADE = 'C' THEN CNT ELSE 0 END AS C_CNT,
           CASE WHEN GRADE = 'D' THEN CNT ELSE 0 END AS D_CNT,
           CASE WHEN GRADE = 'F' THEN CNT ELSE 0 END AS F_CNT
    FROM COUNT_BY_STDNT_N_GRADE
)

SELECT SNAME,
       SUM(A_CNT) AS A_CNT,
       SUM(B_CNT) AS B_CNT,
       SUM(C_CNT) AS C_CNT,
       SUM(D_CNT) AS D_CNT,
       SUM(F_CNT) AS F_CNT
FROM TMP_PIVOT_TABLE
GROUP BY SNAME;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   

-- INLINE Hint & NO_MERGE Hint 예시
EXPLAIN PLAN FOR 
WITH COUNT_BY_STDNT_N_GRADE AS (
    SELECT /*+ INLINE NO_MERGE */
           A.SNAME,
           D.GRADE,
           COUNT(*) AS CNT
    FROM SYSTEM.STUDENT A,
         SYSTEM.COURSE B,
         SYSTEM.SCORE C,
         SYSTEM.SCGRADE D
    WHERE A.SNO = C.SNO
          AND B.CNO = C.CNO
          AND C.RESULT <= D.HISCORE
          AND C.RESULT >= D.LOSCORE
          AND A.SNO IN ('944503', '925602')
    GROUP BY A.SNAME, D.GRADE
),

TMP_PIVOT_TABLE AS (
    SELECT /*+ INLINE NO_MERGE */
           SNAME,
           CASE WHEN GRADE = 'A' THEN CNT ELSE 0 END AS A_CNT,
           CASE WHEN GRADE = 'B' THEN CNT ELSE 0 END AS B_CNT,
           CASE WHEN GRADE = 'C' THEN CNT ELSE 0 END AS C_CNT,
           CASE WHEN GRADE = 'D' THEN CNT ELSE 0 END AS D_CNT,
           CASE WHEN GRADE = 'F' THEN CNT ELSE 0 END AS F_CNT
    FROM COUNT_BY_STDNT_N_GRADE
)

SELECT SNAME,
       SUM(A_CNT) AS A_CNT,
       SUM(B_CNT) AS B_CNT,
       SUM(C_CNT) AS C_CNT,
       SUM(D_CNT) AS D_CNT,
       SUM(F_CNT) AS F_CNT
FROM TMP_PIVOT_TABLE
GROUP BY SNAME;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   

-- MATERIALIZE Hint 예시
EXPLAIN PLAN FOR 
WITH COUNT_BY_STDNT_N_GRADE AS (
    SELECT /*+ MATERIALIZE */
           A.SNAME,
           D.GRADE,
           COUNT(*) AS CNT
    FROM SYSTEM.STUDENT A,
         SYSTEM.COURSE B,
         SYSTEM.SCORE C,
         SYSTEM.SCGRADE D
    WHERE A.SNO = C.SNO
          AND B.CNO = C.CNO
          AND C.RESULT <= D.HISCORE
          AND C.RESULT >= D.LOSCORE
          AND A.SNO IN ('944503', '925602')
    GROUP BY A.SNAME, D.GRADE
),

TMP_PIVOT_TABLE AS (
    SELECT /*+ MATERIALIZE */
           SNAME,
           CASE WHEN GRADE = 'A' THEN CNT ELSE 0 END AS A_CNT,
           CASE WHEN GRADE = 'B' THEN CNT ELSE 0 END AS B_CNT,
           CASE WHEN GRADE = 'C' THEN CNT ELSE 0 END AS C_CNT,
           CASE WHEN GRADE = 'D' THEN CNT ELSE 0 END AS D_CNT,
           CASE WHEN GRADE = 'F' THEN CNT ELSE 0 END AS F_CNT
    FROM COUNT_BY_STDNT_N_GRADE
)

SELECT SNAME,
       SUM(A_CNT) AS A_CNT,
       SUM(B_CNT) AS B_CNT,
       SUM(C_CNT) AS C_CNT,
       SUM(D_CNT) AS D_CNT,
       SUM(F_CNT) AS F_CNT
FROM TMP_PIVOT_TABLE
GROUP BY SNAME;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

-- WITH INLINE VS WITH MATERIALIZE 예시(WITH INLINE)
EXPLAIN PLAN FOR 
WITH TARGET_EMP_INFO AS (
    SELECT /*+ INLINE NO_MERGE */
           A.ENO,
           A.ENAME,
           A.JOB,
           A.SAL,
           A.DNO
    FROM SYSTEM.EMP A,
         SYSTEM.BEST_EMP B
    WHERE A.ENO = B.ENO
),

TMP_JOIN_WITH_DEPT_TBL AS (
    SELECT /*+ INLINE NO_MERGE */
           D.DNO,
           D.DNAME,
           D.LOC
    FROM TARGET_EMP_INFO C,
         SYSTEM.DEPT D
    WHERE C.DNO = D.DNO
)

SELECT /*+ LEADING(X1 X2) */
       X1.ENAME,
       X1.JOB,
       X1.SAL,
       X2.DNAME,
       X2.LOC
FROM TARGET_EMP_INFO X1,
     TMP_JOIN_WITH_DEPT_TBL X2
WHERE X1.DNO = X2.DNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);  

-- WITH INLINE VS WITH MATERIALIZE 예시(WITH MATERIALIZE)
EXPLAIN PLAN FOR 
WITH TARGET_EMP_INFO AS (
    SELECT /*+ MATERIALIZE */
           A.ENO,
           A.ENAME,
           A.JOB,
           A.SAL,
           A.DNO
    FROM SYSTEM.EMP A,
         SYSTEM.BEST_EMP B
    WHERE A.ENO = B.ENO
),

TMP_JOIN_WITH_DEPT_TBL AS (
    SELECT /*+ INLINE NO_MERGE */
           D.DNO,
           D.DNAME,
           D.LOC
    FROM TARGET_EMP_INFO C,
         SYSTEM.DEPT D
    WHERE C.DNO = D.DNO
)

SELECT /*+ LEADING(X1 X2) */
       X1.ENAME,
       X1.JOB,
       X1.SAL,
       X2.DNAME,
       X2.LOC
FROM TARGET_EMP_INFO X1,
     TMP_JOIN_WITH_DEPT_TBL X2
WHERE X1.DNO = X2.DNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);  

-- NO_UNNEST Hint & PUSH_SUBQ Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_NL(B) */
       A.ENAME,
       A.JOB,
       A.SAL,
       B.DNAME
FROM SYSTEM.EMP A,
     SYSTEM.DEPT B
WHERE A.DNO = B.DNO
      AND A.ENO IN (SELECT /*+ NO_UNNEST PUSH_SUBQ */ C.ENO FROM SYSTEM.BEST_EMP C);
      
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- NESTED SUBQ를 사용해서 작성했던 QUERY를 Join으로 수정하는 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B C) */
       B.ENAME,
       B.JOB,
       B.SAL,
       C.DNAME
FROM  SYSTEM.BEST_EMP A,
      SYSTEM.EMP B,
      SYSTEM.DEPT C
WHERE A.ENO = B.ENO
      AND B.DNO = C.DNO;
      
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   

-- PARALLEL SCAN 예시
EXPLAIN PLAN FOR 
SELECT /*+ FULL(A) PARALLEL(A 4) */
       *
FROM SYSTEM.SCORE A;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   

-- PARALLEL SCAN & NL Join 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_NL(B) FULL(A) PARALLEL(A 4) INDEX(B PROFESSOR_PNO_PK) */
       *
FROM SYSTEM.COURSE A,
     SYSTEM.PROFESSOR B
WHERE A.PNO = B.PNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   

-- PARALLEL SCAN & Hash Join 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_HASH(B) FULL(A) PARALLEL(A 2) FULL(B) PARALLEL(B 2) */
       *
FROM SYSTEM.COURSE A,
     SYSTEM.PROFESSOR B
WHERE A.PNO = B.PNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);
